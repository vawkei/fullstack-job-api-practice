//1 👉🏿🚀
http status codes:
200: OK
201: Created
202: Accepted
204: No Content
300: Multiple Choices
301: Moved Permanently
302: Moved Temporarily
304: Not Modified
400: Bad Request
401: Unauthorized
403: Forbidden
404: Not Found
500: Internal Server Error
501: Not Implemented
502: Bad Gateway
503: Service Unavailable


//2 👉🏿🚀
//HEADERS: key values:
name:ben
_id:651be7351e3b54672c6b6e18,
Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTFiZTczNTFlM2I1NDY3MmM2YjZlMTgiLCJuYW1lIjoiYmVuIiwiaWF0IjoxNjk2Mzk5MzU4LCJleHAiOjE2OTg5OTEzNTh9.mU7scOo1IHNW9gddMxXKtUnGxnFb32SF5n4hzxRiYX8.

name:ben2
_id:651bf05ae3eebe91562f598b'
Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTFiZjA1YWUzZWViZTkxNTYyZjU5OGIiLCJuYW1lIjoiYmVuMiIsImlhdCI6MTY5NjQ1MDI5OSwiZXhwIjoxNjk5MDQyMjk5fQ.xUBZoSzXZ9DIqYsGhEjkxa4-v9OAZEsX-GUDFBl66uI

//3 👉🏿🚀
According to gpt:
LocalStorage and SessionStorage: Avoid storing tokens in localStorage or sessionStorage as they are accessible via JavaScript and can be vulnerable to XSS attacks. However, i only did this for the purpose of this project. Wont be indulging in it in subsequent projects.
Store in Redux State Securely:

When storing tokens in Redux state, use the useSelector hook or connect function to retrieve tokens from the Redux store when needed. Avoid direct access to the store's state to prevent inadvertent exposure.


Here's a simple example of how you might configure your Redux store to securely manage a token:
// authSlice.js (Redux slice for authentication)
import { createSlice } from '@reduxjs/toolkit';

const authSlice = createSlice({
  name: 'auth',
  initialState: {
    token: null,
  },
  reducers: {
    setToken: (state, action) => {
      state.token = action.payload;
    },
    clearToken: (state) => {
      state.token = null;
    },
  },
});

export const { setToken, clearToken } = authSlice.actions;

export default authSlice.reducer;


